# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-for-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: TEST_1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Check for python version
        run: |
          which python
          which python3
          which pip
          which pip3
          python --version
          python3 --version
      - name: Print secrets and variables for test
        run: echo "Env Secret ${{ secrets.MY_SECRET_1 }}"
  
  # This workflow contains a single job called "build"
  build-for-stage:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: STAGE_1
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Print secrets and variables for stage
        run: |
          echo "Env Secret ${{ secrets.MY_SECRET_1 }}"
          echo "Env Variable ${{ vars.MY_VARIABLE_1 }}"
          echo "Repo Secret ${{{ secrets.MY_REPO_SECRET }}"
          echo "Repo Variable ${{ vars.MY_REPO_VARIABLE }}"
